###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /usr/src/sayit

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
  && apk add postgresql-dev gcc python3-dev musl-dev

# lint
# RUN pip install --upgrade pip
# RUN pip install flake8
# COPY . .
# RUN flake8 --ignore=E501,F401 ./sayit

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/sayit/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the sayit user
RUN mkdir -p /home/sayit

# create the sayit user
RUN addgroup -S sayit && adduser -S sayit -G sayit

# create the appropriate directories
ENV HOME=/home/sayit
ENV APP_HOME=/home/sayit/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/sayit/wheels /wheels
COPY --from=builder /usr/src/sayit/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the sayit user
RUN chown -R sayit:sayit $APP_HOME

# change to the sayit user
USER sayit

# run entrypoint.prod.sh
ENTRYPOINT ["/home/sayit/web/entrypoint.prod.sh"]
